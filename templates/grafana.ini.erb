#
# This file was generated by Chef
# Do not modify this file by hand!
#
# full documentation: http://docs.grafana.org/installation/configuration/

<% if @grafana['app_mode'] %>
app_mode = <%= @grafana['app_mode'] %>
<% else %>
app_mode = production
<% end %>

<% if @grafana['instance_name'] %>
instance_name = <%= @grafana['instance_name'] %>
<% else %>
instance_name = ${HOSTNAME}
<% end %>

#################################### Paths ###############################
<% if @grafana['paths'] %>
[paths]
# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
<% if @grafana['paths']['data'] %>
data = <%= @grafana['paths']['data'] %>
<% end %>

# Temporary files in `data` directory older than given duration will be removed
<% if @grafana['paths']['temp_data_lifetime'] %>
temp_data_lifetime = <%= @grafana['paths']['temp_data_lifetime'] %>
<% end %>

# Directory where grafana can store logs
<% if @grafana['paths']['logs'] %>
logs = <%= @grafana['paths']['logs'] %>
<% end %>

# Directory where grafana will automatically scan and look for plugins
<% if @grafana['paths']['plugins'] %>
plugins = <%= @grafana['paths']['plugins'] %>
<% end %>

# folder that contains provisioning config files that grafana will apply on startup and while running.
<% if @grafana['paths']['provisioning'] %>
provisioning = <%= @grafana['paths']['provisioning'] %>
<% end %>
<% end %>

#################################### Server ##############################
<% if @grafana['server'] %>
[server]

# Protocol (http, https, socket)
<% if @grafana['server']['protocol'] %>
protocol = <%= @grafana['server']['protocol'] %>
<% end %>

# The ip address to bind to, empty will bind to all interfaces
<% if @grafana['server']['http_addr'] %>
http_addr = <%= @grafana['server']['http_addr'] %>
<% end %>

# The http port to use
<% if @grafana['server']['http_port'] %>
http_port = <%= @grafana['server']['http_port'] %>
<% end %>

# The public facing domain name used to access grafana from a browser
<% if @grafana['server']['domain'] %>
domain = <%= @grafana['server']['domain'] %>
<% end %>

# Redirect to correct domain if host header does not match domain
# Prevents DNS rebinding attacks
<% if @grafana['server']['enforce_domain'] %>
enforce_domain = <%= @grafana['server']['enforce_domain'] %>
<% end %>

# The full public facing url
<% if @grafana['server']['root_url'] %>
root_url = <%= @grafana['server']['root_url'] %>
<% end %>

# Serve from subpath. Available only in grafana from version 6.3 and above.
<% if @grafana['server']['serve_from_sub_path'] %>
serve_from_sub_path = <%= @grafana['server']['serve_from_sub_path'] %>
<% end %>

# Log web requests
<% if @grafana['server']['router_logging'] %>
router_logging = <%= @grafana['server']['router_logging'] %>
<% end %>

# the path relative working path
<% if @grafana['server']['static_root_path'] %>
static_root_path = <%= @grafana['server']['static_root_path'] %>
<% end %>

# enable gzip
<% if @grafana['server']['enable_gzip'] %>
enable_gzip = <%= @grafana['server']['enable_gzip'] %>
<% end %>

# https certs & key file
<% if @grafana['server']['cert_key'] %>
cert_key = <%= @grafana['server']['cert_key'] %>
<% end %>
<% if @grafana['server']['cert_file'] %>
cert_file = <%= @grafana['server']['cert_file'] %>
<% end %>

# Unix socket path
socket = /tmp/grafana.sock
<% end %>
#################################### Database ############################
<% if @grafana['database'] %>
[database]
# You can configure the database connection by specifying type, host, name, user and password
# as separate properties or as on string using the url property.

# Either "mysql", "postgres" or "sqlite3", it's your choice
<% if @grafana['database']['type'] %>
type = <%= @grafana['database']['type'] %>
<% end %>
<% if @grafana['database']['host'] %>
host = <%= @grafana['database']['host'] %>
<% end %>
<% if @grafana['database']['name'] %>
name = <%= @grafana['database']['name'] %>
<% end %>
<% if @grafana['database']['user'] %>
user = <%= @grafana['database']['user'] %>
<% end %>
<% if @grafana['database']['password'] %>
password = <%= @grafana['database']['password'] %>
<% end %>

# Max idle conn setting default is 2
<% if @grafana['database']['max_idle_conn'] %>
max_idle_conn = <%= @grafana['database']['max_idle_conn'] %>
<% end %>

# Max conn setting default is 0 (mean not set)
<% if @grafana['database']['max_open_conn'] %>
max_open_conn = <%= @grafana['database']['max_open_conn'] %>
<% end %>

# Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
<% if @grafana['database']['conn_max_lifetime'] %>
conn_max_lifetime = <%= @grafana['database']['conn_max_lifetime'] %>
<% end %>

# Set to true to log the sql calls and execution times.
<% if @grafana['database']['log_queries'] %>
log_queries = <%= @grafana['database']['log_queries'] %>
<% end %>

# For "postgres", use either "disable", "require" or "verify-full"
# For "mysql", use either "true", "false", or "skip-verify".
<% if @grafana['database']['ssl_mode'] %>
ssl_mode = <%= @grafana['database']['ssl_mode'] %>
<% end %>
<% if @grafana['database']['ca_cert_path'] %>
ca_cert_path = <%= @grafana['database']['ca_cert_path'] %>
<% end %>
<% if @grafana['database']['client_key_path'] %>
client_key_path = <%= @grafana['database']['client_key_path'] %>
<% end %>
<% if @grafana['database']['client_cert_path'] %>
client_cert_path = <%= @grafana['database']['client_cert_path'] %>
<% end %>
<% if @grafana['database']['server_cert_name'] %>
server_cert_name = <%= @grafana['database']['server_cert_name'] %>
<% end %>

# For "sqlite3" only, path relative to data_path setting
<% if @grafana['database']['path'] %>
path = <%= @grafana['database']['path'] %>
<% end %>
<% end %>
#################################### Session #############################
<% if @grafana['session'] %>
[session]
# Either "memory", "file", "redis", "mysql", "postgres", "memcache", default is "file"
<% if @grafana['session']['provider'] %>
provider = <%= @grafana['session']['provider'] %>
<% end %>

<% if @grafana['session']['provider_config'] %>
provider_config = <%= @grafana['session']['provider_config'] %>
<% end %>

# Session cookie name
<% if @grafana['session']['cookie_name'] %>
cookie_name = <%= @grafana['session']['cookie_name'] %>
<% end %>

# If you use session in https only, default is false
<% if @grafana['session']['cookie_secure'] %>
cookie_secure = <%= @grafana['session']['cookie_secure'] %>
<% end %>

# Session life time, default is 86400
<% if @grafana['session']['session_life_time'] %>
session_life_time = <%= @grafana['session']['session_life_time'] %>
<% end %>
<% if @grafana['session']['gc_interval_time'] %>
gc_interval_time = <%= @grafana['session']['gc_interval_time'] %>
<% end %>

# Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
<% if @grafana['session']['conn_max_lifetime'] %>
conn_max_lifetime = <%= @grafana['session']['conn_max_lifetime'] %>
<% end %>
<% end %>
#################################### Remote Cache #############################
<% if @grafana['remote_cache'] %>
[remote_cache]
# Either "redis", "memcached", "database" default is "database"
<% if @grafana['remote_cache']['type'] %>
type = <%= @grafana['remote_cache']['type'] %>
<% end %>

# The remote cache connection string.
# Leave empty when using database since it will use the primary database.
# Redis example config: addr=127.0.0.1:6379,pool_size=100,db=grafana
# Memcache example: 127.0.0.1:11211
<% if @grafana['remote_cache']['connstr'] %>
connstr = <%= @grafana['remote_cache']['connstr'] %>
<% end %>
<% end %>

#################################### Data proxy ###########################
<% if @grafana['dataproxy'] %>
[dataproxy]

# This enables data proxy logging, default is false
<% if @grafana['dataproxy']['logging'] %>
logging = <%= @grafana['dataproxy']['logging'] %>
<% end %>
<% end %>


#################################### Analytics ###########################
[analytics]
reporting_enabled = true

check_for_updates = true

#################################### Security ############################
<% if @grafana['security'] %>
[security]
# default admin user, created on startup
<% if @grafana['security']['admin_user'] %>
admin_user = <%= @grafana['security']['admin_user'] %>
<% end %>

# default admin password, can be changed before first start of grafana, or in profile settings
<% if @grafana['security']['admin_password'] %>
admin_password = <%= @grafana['security']['admin_password'] %>
<% end %>

# used for signing
<% if @grafana['security']['secret_key'] %>
secret_key = <%= @grafana['security']['secret_key'] %>
<% end %>

# Auto-login remember days
<% if @grafana['security']['login_remember_days'] %>
login_remember_days = <%= @grafana['security']['login_remember_days'] %>
<% end %>
<% if @grafana['security']['cookie_username'] %>
cookie_username = <%= @grafana['security']['cookie_username'] %>
<% end %>
<% if @grafana['security']['cookie_remember_name'] %>
cookie_remember_name = <%= @grafana['security']['cookie_remember_name'] %>
<% end %>
<% if @grafana['security']['cookie_samesite'] %>
cookie_samesite = <%= @grafana['security']['cookie_samesite'] %>
<% end %>

# disable gravatar profile images
<% if @grafana['security']['disable_gravatar'] %>
disable_gravatar = <%= @grafana['security']['disable_gravatar'] %>
<% end %>

# data source proxy whitelist (ip_or_domain:port separated by spaces)
<% if @grafana['security']['data_source_proxy_whitelist'] %>
data_source_proxy_whitelist = <%= @grafana['security']['data_source_proxy_whitelist'] %>
<% end %>

# disable protection against brute force login attempts
<% if @grafana['security']['disable_brute_force_login_protection'] %>
disable_brute_force_login_protection = <%= @grafana['security']['disable_brute_force_login_protection'] %>
<% end %>

# allow grafana to exist in iframes
<% if @grafana['security']['allow_embedding'] %>
allow_embedding = <%= @grafana['security']['allow_embedding'] %>
<% end %>

# secure the session cookie if running behind https
<% if @grafana['security']['cookie_secure'] %>
cookie_secure = <%= @grafana['security']['cookie_secure'] %>
<% end %>

<% end %>
#################################### Snapshots ###########################
<% if @grafana['snapshots'] %>
[snapshots]
# snapshot sharing options
<% if @grafana['snapshots']['external_enabled'] %>
external_enabled = <%= @grafana['snapshots']['external_enabled'] %>
<% end %>
<% if @grafana['snapshots']['external_snapshot_url'] %>
external_snapshot_url = <%= @grafana['snapshots']['external_snapshot_url'] %>
<% end %>
<% if @grafana['snapshots']['external_snapshot_name'] %>
external_snapshot_name = <%= @grafana['snapshots']['external_snapshot_name'] %>
<% end %>

# remove expired snapshot
<% if @grafana['snapshots']['snapshot_remove_expired'] %>
snapshot_remove_expired = <%= @grafana['snapshots']['snapshot_remove_expired'] %>
<% end %>
<% end %>
#################################### External Image Storage ###########################
# currently AWS S3 is only supported
<% if @grafana['external_image_storage'] %>
[external_image_storage]
provider = <%= @grafana['external_image_storage']['storage_provider'] %>

# Define S3 as the external storage
<% if @grafana['external_image_storage']['storage_provider'] == 's3' %>
[external_image_storage.s3]
region = <%= @grafana['external_image_storage']['region'] %>
<% end %>
<% if @grafana['external_image_storage']['bucket'] %>
bucket = <%= @grafana['external_image_storage']['bucket'] %>
<% end %>
<% if @grafana['external_image_storage']['path'] %>
path = <%= @grafana['external_image_storage']['path'] %>
<% end %>
<% if @grafana['external_image_storage']['bucket_url'] %>
bucket_url = <%= @grafana['external_image_storage']['bucket_url'] %>
<% end %>
<% if @grafana['external_image_storage']['access_key'] %>
access_key = <%= @grafana['external_image_storage']['access_key'] %>
<% end %>
<% if @grafana['external_image_storage']['access_key'] %>
secret_key = <%= @grafana['external_image_storage']['secret_key'] %>
<% end %>
<% end %>

#################################### Plugins ##################
<% if @grafana['plugins'] %>
[plugins]
<% if @grafana['plugins']['enable_alpha'] %>
# Set to true if you want to test alpha plugins that are not yet ready for general usage. Default is false.
enable_alpha = <%= @grafana['plugins']['enable_alpha'] %>
<% end %>

<% if @grafana['plugins']['allow_loading_unsigned_plugins'] %>
# Enter a comma-separated list of plugin identifiers to identify plugins to load even if they are unsigned.
# Plugins with modified signatures are never loaded.
# We do not recommend using this option.
allow_loading_unsigned_plugins = <%= @grafana['plugins']['allow_loading_unsigned_plugins'] %>
<% end %>

<% if @grafana['plugins']['plugin_admin_enabled'] %>
# Available to Grafana administrators only, enables installing / uninstalling / updating plugins directly from the Grafana UI.
# Set to true by default. Setting it to false will hide the install / uninstall / update controls.
plugin_admin_enabled = <%= @grafana['plugins']['plugin_admin_enabled'] %>
<% end %>

<% if @grafana['plugins']['plugin_admin_external_manage_enabled'] %>
# Set to true if you want to enable external management of plugins. Default is false. This is only applicable to Grafana Cloud users.
plugin_admin_external_manage_enabled = <%= @grafana['plugins']['plugin_admin_external_manage_enabled'] %>
<% end %>

<% if @grafana['plugins']['plugin_catalog_url'] %>
# Custom install/learn more URL for enterprise plugins. Defaults to https://grafana.com/grafana/plugins/.
plugin_catalog_url = <%= @grafana['plugins']['plugin_catalog_url'] %>
<% end %>

<% if @grafana['plugins']['plugin_catalog_hidden_plugins'] %>
# Enter a comma-separated list of plugin identifiers to hide in the plugin catalog.
plugin_catalog_hidden_plugins = <%= @grafana['plugins']['plugin_catalog_hidden_plugins'] %>
<% end %>
<% end %>

#################################### Dashboards ##################
<% if @grafana['dashboards'] %>
[dashboards]

# Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1+
<% if @grafana['dashboards']['versions_to_keep'] %>
versions_to_keep = <%= @grafana['dashboards']['versions_to_keep'] %>
<% end %>

# Minimum dashboard refresh interval. When set, this will restrict users to set the refresh interval of a dashboard lower than given interval.
# The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
<% if @grafana['dashboards']['min_refresh_interval'] %>
min_refresh_interval = <%= @grafana['dashboards']['min_refresh_interval'] %>
<% end %>

<% end %>
#################################### Users ###############################
<% if @grafana['users'] %>
[users]
# disable user signup / registration
<% if @grafana['users']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['users']['allow_sign_up'] %>
<% end %>

# Allow non admin users to create organizations
<% if @grafana['users']['allow_org_create'] %>
allow_org_create = <%= @grafana['users']['allow_org_create'] %>
<% end %>

# Set to true to automatically assign new users to the default organization (id 1)
<% if @grafana['users']['auto_assign_org'] %>
auto_assign_org = <%= @grafana['users']['auto_assign_org'] %>
<% end %>

# Set this value to automatically add new users to the provided organization (if auto_assign_org above is set to true)
<% if @grafana['users']['auto_assign_org_id'] %>
auto_assign_org_id = <%= @grafana['users']['auto_assign_org_id'] %>
<% end %>

# Default role new users will be automatically assigned (if auto_assign_org above is set to true)
<% if @grafana['users']['auto_assign_org_role'] %>
auto_assign_org_role = <%= @grafana['users']['auto_assign_org_role'] %>
<% end %>

# Require email validation before sign up completes
<% if @grafana['users']['verify_email_enabled'] %>
verify_email_enabled = <%= @grafana['users']['verify_email_enabled'] %>
<% end %>

# Background text for the user field on the login page
<% if @grafana['users']['login_hint'] %>
login_hint = <%= @grafana['users']['login_hint'] %>
<% end %>

# Default UI theme ("dark" or "light")
<% if @grafana['users']['default_theme'] %>
default_theme = <%= @grafana['users']['default_theme'] %>
<% end %>

# External user management
<% if @grafana['users']['external_manage_link_url'] %>
external_manage_link_url = <%= @grafana['users']['external_manage_link_url'] %>
<% end %>
<% if @grafana['users']['external_manage_link_name'] %>
external_manage_link_name = <%= @grafana['users']['external_manage_link_name'] %>
<% end %>
<% if @grafana['users']['external_manage_info'] %>
external_manage_info = <%= @grafana['users']['external_manage_info'] %>
<% end %>

# Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
<% if @grafana['users']['viewers_can_edit'] %>
viewers_can_edit = <%= @grafana['users']['viewers_can_edit'] %>
<% end %>
<% end %>

<% if @grafana['auth'] %>
[auth]
# Login cookie name
<% if @grafana['auth']['login_cookie_name'] %>
login_cookie_name = <%= @grafana['auth']['login_cookie_name'] %>
<% end %>

# Set to true to disable (hide) the login form, useful if you use OAuth
<% if @grafana['auth']['disable_login_form'] %>
disable_login_form = <%= @grafana['auth']['disable_login_form'] %>
<% end %>

# Set to true to disable the signout link in the side menu. useful if you use auth.proxy
<% if @grafana['auth']['disable_signout_menu'] %>
disable_signout_menu = <%= @grafana['auth']['disable_signout_menu'] %>
<% end %>

# URL to redirect the user to after sign out
<% if @grafana['auth']['signout_redirect_url'] %>
signout_redirect_url = <%= @grafana['auth']['signout_redirect_url'] %>
<% end %>

# Set to true to attempt login with OAuth automatically, skipping the login screen.
# This setting is ignored if multiple OAuth providers are configured.
<% if @grafana['auth']['oauth_auto_login'] %>
oauth_auto_login = <%= @grafana['auth']['oauth_auto_login'] %>
<% end %>

<% if @grafana['auth']['login_maximum_lifetime_days'] %>
# Set the cookie lifetime in days
login_maximum_lifetime_days = <%= @grafana['auth']['login_maximum_lifetime_days'] %>
<% end %>

<% end %>
#################################### Anonymous Auth ######################
<% if @grafana['auth_anonymous'] %>
[auth.anonymous]
# enable anonymous access
<% if @grafana['auth_anonymous']['enabled'] %>
enabled = <%= @grafana['auth_anonymous']['enabled'] %>
<% end %>

# specify organization name that should be used for unauthenticated users
<% if @grafana['auth_anonymous']['org_name'] %>
org_name = <%= @grafana['auth_anonymous']['org_name'] %>
<% end %>

# specify role for unauthenticated users
<% if @grafana['auth_anonymous']['org_role'] %>
org_role = <%= @grafana['auth_anonymous']['org_role'] %>
<% end %>
<% end %>
#################################### Github Auth #########################
<% if @grafana['auth_github'] %>
[auth.github]
<% if @grafana['auth_github']['enabled'] %>
enabled = <%= @grafana['auth_github']['enabled'] %>
<% end %>
<% if @grafana['auth_github']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_github']['allow_sign_up'] %>
<% end %>
<% if @grafana['auth_github']['client_id'] %>
client_id = <%= @grafana['auth_github']['client_id'] %>
<% end %>
<% if @grafana['auth_github']['client_secret'] %>
client_secret = <%= @grafana['auth_github']['client_secret'] %>
<% end %>
<% if @grafana['auth_github']['scopes'] %>
scopes = <%= @grafana['auth_github']['scopes'] %>
<% end %>
<% if @grafana['auth_github']['auth_url'] %>
auth_url = <%= @grafana['auth_github']['auth_url'] %>
<% end %>
<% if @grafana['auth_github']['token_url'] %>
token_url = <%= @grafana['auth_github']['token_url'] %>
<% end %>
<% if @grafana['auth_github']['api_url'] %>
api_url = <%= @grafana['auth_github']['api_url'] %>
<% end %>
<% if @grafana['auth_github']['team_ids'] %>
team_ids = <%= @grafana['auth_github']['team_ids'] %>
<% end %>
<% if @grafana['auth_github']['allowed_organizations'] %>
allowed_organizations = <%= @grafana['auth_github']['allowed_organizations'] %>
<% end %>
<% end %>
#################################### GitLab Auth #########################
<% if @grafana['auth_gitlab'] %>
[auth.gitlab]
<% if @grafana['auth_gitlab']['enabled'] %>
enabled = <%= @grafana['auth_gitlab']['enabled'] %>
<% end %>
<% if @grafana['auth_gitlab']['allowed_organizations'] %>
allowed_organizations = <%= @grafana['auth_gitlab']['allowed_organizations'] %>
<% end %>
<% if @grafana['auth_gitlab']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_gitlab']['allow_sign_up'] %>
<% end %>
<% if @grafana['auth_gitlab']['client_id'] %>
client_id = <%= @grafana['auth_gitlab']['client_id'] %>
<% end %>
<% if @grafana['auth_gitlab']['client_secret'] %>
client_secret = <%= @grafana['auth_gitlab']['client_secret'] %>
<% end %>
<% if @grafana['auth_gitlab']['scopes'] %>
scopes = <%= @grafana['auth_gitlab']['scopes'] %>
<% end %>
<% if @grafana['auth_gitlab']['auth_url'] %>
auth_url = <%= @grafana['auth_gitlab']['auth_url'] %>
<% end %>
<% if @grafana['auth_gitlab']['token_url'] %>
token_url = <%= @grafana['auth_gitlab']['token_url'] %>
<% end %>
<% if @grafana['auth_gitlab']['api_url'] %>
api_url = <%= @grafana['auth_gitlab']['api_url'] %>
<% end %>
<% if @grafana['auth_gitlab']['allowed_groups'] %>
allowed_groups = <%= @grafana['auth_gitlab']['allowed_groups'] %>
<% end %>
<% end %>
#################################### Google Auth #########################
<% if @grafana['auth_google'] %>
[auth.google]
<% if @grafana['auth_google']['enabled'] %>
enabled = <%= @grafana['auth_google']['enabled'] %>
<% end %>
<% if @grafana['auth_google']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_google']['allow_sign_up'] %>
<% end %>
<% if @grafana['auth_google']['client_id'] %>
client_id = <%= @grafana['auth_google']['client_id'] %>
<% end %>
<% if @grafana['auth_google']['client_secret'] %>
client_secret = <%= @grafana['auth_google']['client_secret'] %>
<% end %>
<% if @grafana['auth_google']['scopes'] %>
scopes = <%= @grafana['auth_google']['scopes'] %>
<% end %>
<% if @grafana['auth_google']['auth_url'] %>
auth_url = <%= @grafana['auth_google']['auth_url'] %>
<% end %>
<% if @grafana['auth_google']['auth_url'] %>
auth_url = <%= @grafana['auth_google']['auth_url'] %>
<% end %>
<% if @grafana['auth_google']['token_url'] %>
token_url = <%= @grafana['auth_google']['token_url'] %>
<% end %>
<% if @grafana['auth_google']['api_url'] %>
api_url = <%= @grafana['auth_google']['api_url'] %>
<% end %>
<% if @grafana['auth_google']['allowed_domains'] %>
allowed_domains = <%= @grafana['auth_google']['allowed_domains'] %>
<% end %>
<% if @grafana['auth_google']['hosted_domain'] %>
hosted_domain = <%= @grafana['auth_google']['hosted_domain'] %>
<% end %>
<% end %>
#################################### Grafana.com Auth ####################
<% if @grafana['auth_grafananet'] %>
# legacy key names (so they work in env variables)
[auth.grafananet]
<% if @grafana['auth_grafananet']['enabled'] %>
enabled = <%= @grafana['auth_grafananet']['enabled'] %>
<% end %>
<% if @grafana['auth_grafananet']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_grafananet']['hostedallow_sign_up_domain'] %>
<% end %>
<% if @grafana['auth_grafananet']['client_id'] %>
client_id = <%= @grafana['auth_grafananet']['client_id'] %>
<% end %>
<% if @grafana['auth_grafananet']['client_secret'] %>
client_secret = <%= @grafana['auth_grafananet']['client_secret'] %>
<% end %>
<% if @grafana['auth_grafananet']['scopes'] %>
scopes = <%= @grafana['auth_grafananet']['scopes'] %>
<% end %>
<% if @grafana['auth_grafananet']['allowed_organizations'] %>
allowed_organizations = <%= @grafana['auth_grafananet']['allowed_organizations'] %>
<% end %>
<% end %>
<% if @grafana['auth_grafanacom'] %>
[auth.grafana_com]
<% if @grafana['auth_grafanacom']['enabled'] %>
enabled = <%= @grafana['auth_grafanacom']['enabled'] %>
<% end %>
<% if @grafana['auth_grafanacom']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_grafanacom']['hostedallow_sign_up_domain'] %>
<% end %>
<% if @grafana['auth_grafanacom']['client_id'] %>
client_id = <%= @grafana['auth_grafanacom']['client_id'] %>
<% end %>
<% if @grafana['auth_grafanacom']['client_secret'] %>
client_secret = <%= @grafana['auth_grafanacom']['client_secret'] %>
<% end %>
<% if @grafana['auth_grafanacom']['scopes'] %>
scopes = <%= @grafana['auth_grafanacom']['scopes'] %>
<% end %>
<% if @grafana['auth_grafanacom']['allowed_organizations'] %>
allowed_organizations = <%= @grafana['auth_grafanacom']['allowed_organizations'] %>
<% end %>

<% end %>
#################################### Generic OAuth #######################
<% if @grafana['auth_generic_oauth'] %>
[auth.generic_oauth]
<% if @grafana['auth_generic_oauth']['name'] %>
name = <%= @grafana['auth_generic_oauth']['name'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['enabled'] %>
enabled = <%= @grafana['auth_generic_oauth']['enabled'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_generic_oauth']['allow_sign_up'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['client_id'] %>
client_id = <%= @grafana['auth_generic_oauth']['client_id'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['client_secret'] %>
client_secret = <%= @grafana['auth_generic_oauth']['client_secret'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['scopes'] %>
scopes = <%= @grafana['auth_generic_oauth']['scopes'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['email_attribute_name'] %>
email_attribute_name = <%= @grafana['auth_generic_oauth']['email_attribute_name'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['auth_url'] %>
auth_url = <%= @grafana['auth_generic_oauth']['auth_url'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['token_url'] %>
token_url = <%= @grafana['auth_generic_oauth']['token_url'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['api_url'] %>
api_url = <%= @grafana['auth_generic_oauth']['api_url'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['team_ids'] %>
team_ids = <%= @grafana['auth_generic_oauth']['team_ids'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['allowed_organizations'] %>
allowed_organizations = <%= @grafana['auth_generic_oauth']['allowed_organizations'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['tls_skip_verify_insecure'] %>
tls_skip_verify_insecure = <%= @grafana['auth_generic_oauth']['tls_skip_verify_insecure'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['tls_client_cert'] %>
tls_client_cert = <%= @grafana['auth_generic_oauth']['tls_client_cert'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['tls_client_key'] %>
tls_client_key = <%= @grafana['auth_generic_oauth']['tls_client_key'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['tls_client_ca'] %>
tls_client_ca = <%= @grafana['auth_generic_oauth']['tls_client_ca'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['send_client_credentials_via_post'] %>
send_client_credentials_via_post = <%= @grafana['auth_generic_oauth']['send_client_credentials_via_post'] %>
<% end %>
<% if @grafana['auth_generic_oauth']['role_attribute_path'] %>
role_attribute_path = <%= @grafana['auth_generic_oauth']['role_attribute_path'] %>
<% end %>
<% end %>
#################################### Basic Auth ##########################
<% if @grafana['auth_basic'] %>
[auth.basic]
<% if @grafana['auth_basic']['enabled'] %>
enabled = <%= @grafana['auth_basic']['enabled'] %>
<% end %>
<% end %>
#################################### Auth Proxy ##########################
<% if @grafana['auth_proxy'] %>
[auth.proxy]
<% if @grafana['auth_proxy']['enabled'] %>
enabled = <%= @grafana['auth_proxy']['enabled'] %>
<% end %>
<% if @grafana['auth_proxy']['header_name'] %>
header_name = <%= @grafana['auth_proxy']['header_name'] %>
<% end %>
<% if @grafana['auth_proxy']['header_property'] %>
header_property = <%= @grafana['auth_proxy']['header_property'] %>
<% end %>
<% if @grafana['auth_proxy']['auto_sign_up'] %>
auto_sign_up = <%= @grafana['auth_proxy']['auto_sign_up'] %>
<% end %>
<% if @grafana['auth_proxy']['ldap_sync_ttl'] %>
ldap_sync_ttl = <%= @grafana['auth_proxy']['ldap_sync_ttl'] %>
<% end %>
<% if @grafana['auth_proxy']['whitelist'] %>
whitelist = <%= @grafana['auth_proxy']['whitelist'] %>
<% end %>
<% if @grafana['auth_proxy']['headers'] %>
headers = <%= @grafana['auth_proxy']['headers'] %>
<% end %>
<% end %>
#################################### Auth LDAP ###########################
<% if @grafana['auth_ldap'] %>
[auth.ldap]
<% if @grafana['auth_ldap']['enabled'] %>
enabled = <%= @grafana['auth_ldap']['enabled'] %>
<% end %>
<% if @grafana['auth_ldap']['config_file'] %>
config_file = <%= @grafana['auth_ldap']['config_file'] %>
<% end %>
<% if @grafana['auth_ldap']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_ldap']['allow_sign_up'] %>
<% end %>
<% end %>
#################################### Auth AzureAD #######################
<% if @grafana['auth_azuread'] %>
[auth.azuread]
<% if @grafana['auth_azuread']['name'] %>
name = <%= @grafana['auth_azuread']['name'] %>
<% end %>
<% if @grafana['auth_azuread']['enabled'] %>
enabled = <%= @grafana['auth_azuread']['enabled'] %>
<% end %>
<% if @grafana['auth_azuread']['allow_sign_up'] %>
allow_sign_up = <%= @grafana['auth_azuread']['allow_sign_up'] %>
<% end %>
<% if @grafana['auth_azuread']['client_id'] %>
client_id = <%= @grafana['auth_azuread']['client_id'] %>
<% end %>
<% if @grafana['auth_azuread']['client_secret'] %>
client_secret = <%= @grafana['auth_azuread']['client_secret'] %>
<% end %>
<% if @grafana['auth_azuread']['scopes'] %>
scopes = <%= @grafana['auth_azuread']['scopes'] %>
<% end %>
<% if @grafana['auth_azuread']['auth_url'] %>
auth_url = <%= @grafana['auth_azuread']['auth_url'] %>
<% end %>
<% if @grafana['auth_azuread']['token_url'] %>
token_url = <%= @grafana['auth_azuread']['token_url'] %>
<% end %>
<% if @grafana['auth_azuread']['allowed_domains'] %>
allowed_domains = <%= @grafana['auth_azuread']['allowed_domains'] %>
<% end %>
<% if @grafana['auth_azuread']['allowed_groups'] %>
allowed_groups = <%= @grafana['auth_azuread']['allowed_groups'] %>
<% end %>
<% end %>
#################################### SMTP / Emailing #####################
<% if @grafana['smtp'] %>
[smtp]
<% if @grafana['smtp']['enabled'] %>
enabled = <%= @grafana['smtp']['enabled'] %>
<% end %>
<% if @grafana['smtp']['host'] %>
host = <%= @grafana['smtp']['host'] %>
<% end %>
<% if @grafana['smtp']['user'] %>
user = <%= @grafana['smtp']['user'] %>
<% end %>
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
<% if @grafana['smtp']['password'] %>
password = <%= @grafana['smtp']['password'] %>
<% end %>
<% if @grafana['smtp']['cert_file'] %>
cert_file = <%= @grafana['smtp']['cert_file'] %>
<% end %>
<% if @grafana['smtp']['key_file'] %>
key_file = <%= @grafana['smtp']['key_file'] %>
<% end %>
<% if @grafana['smtp']['skip_verify'] %>
skip_verify = <%= @grafana['smtp']['skip_verify'] %>
<% end %>
<% if @grafana['smtp']['from_address'] %>
from_address = <%= @grafana['smtp']['from_address'] %>
<% end %>
<% if @grafana['smtp']['from_name'] %>
from_name = <%= @grafana['smtp']['from_name'] %>
<% end %>
<% if @grafana['smtp']['ehlo_identity'] %>
ehlo_identity = <%= @grafana['smtp']['ehlo_identity'] %>
<% end %>
<% end %>

<% if @grafana['emails'] %>
[emails]
<% if @grafana['emails']['welcome_email_on_sign_up'] %>
welcome_email_on_sign_up = <%= @grafana['emails']['welcome_email_on_sign_up'] %>
<% end %>
<% if @grafana['emails']['templates_pattern'] %>
templates_pattern = <%= @grafana['emails']['templates_pattern'] %>
<% end %>
<% end %>
#################################### Logging ##########################
<% if @grafana['log'] %>
[log]
# Either "console", "file", "syslog". Default is console and file
# Use space to separate multiple modes, e.g. "console file"
<% if @grafana['log']['mode'] %>
mode = <%= @grafana['log']['mode'] %>
<% end %>

# Either "debug", "info", "warn", "error", "critical", default is "info"
<% if @grafana['log']['level'] %>
level = <%= @grafana['log']['level'] %>
<% end %>

# optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug
<% if @grafana['log']['filters'] %>
filters = <%= @grafana['log']['filters'] %>
<% end %>

<% end %>
# For "console" mode only
<% if @grafana['log_console'] %>
[log.console]
<% if @grafana['log_console']['level'] %>
level = <%= @grafana['log_console']['level'] %>
<% end %>

# log line format, valid options are text, console and json
<% if @grafana['log_console']['format'] %>
format = <%= @grafana['log_console']['format'] %>
<% end %>
<% end %>

# For "file" mode only
<% if @grafana['log_file'] %>
[log.file]
<% if @grafana['log_file']['level'] %>
level = <%= @grafana['log_file']['level'] %>
<% end %>

# log line format, valid options are text, console and json
<% if @grafana['log_file']['format'] %>
format = <%= @grafana['log_file']['format'] %>
<% end %>

# This enables automated log rotate(switch of following options), default is true
<% if @grafana['log_file']['log_rotate'] %>
log_rotate = <%= @grafana['log_file']['log_rotate'] %>
<% end %>

# Max line number of single file, default is 1000000
<% if @grafana['log_file']['max_lines'] %>
max_lines = <%= @grafana['log_file']['max_lines'] %>
<% end %>

# Max size shift of single file, default is 28 means 1 << 28, 256MB
<% if @grafana['log_file']['max_size_shift'] %>
max_size_shift = <%= @grafana['log_file']['max_size_shift'] %>
<% end %>

# Segment log daily, default is true
<% if @grafana['log_file']['daily_rotate'] %>
daily_rotate = <%= @grafana['log_file']['daily_rotate'] %>
<% end %>

# Expired days of log file(delete after max days), default is 7
<% if @grafana['log_file']['max_days'] %>
max_days = <%= @grafana['log_file']['max_days'] %>
<% end %>
<% end %>


<% if @grafana['log_syslog'] %>
[log.syslog]
<% if @grafana['log_syslog']['level'] %>
level = <%= @grafana['log_syslog']['level'] %>
<% end %>

# log line format, valid options are text, console and json
<% if @grafana['log_syslog']['format'] %>
format = <%= @grafana['log_syslog']['format'] %>
<% end %>

# Syslog network type and address. This can be udp, tcp, or unix. If left blank, the default unix endpoints will be used.
<% if @grafana['log_syslog']['network'] %>
network = <%= @grafana['log_syslog']['network'] %>
<% end %>
<% if @grafana['log_syslog']['address'] %>
address = <%= @grafana['log_syslog']['address'] %>
<% end %>

# Syslog facility. user, daemon and local0 through local7 are valid.
<% if @grafana['log_syslog']['facility'] %>
facility = <%= @grafana['log_syslog']['facility'] %>
<% end %>

# Syslog tag. By default, the process' argv[0] is used.
<% if @grafana['log_syslog']['tag'] %>
tag = <%= @grafana['log_syslog']['tag'] %>
<% end %>
<% end %>
#################################### Usage Quotas ########################
<% if @grafana['quota'] %>
[quota]
<% if @grafana['quota']['enabled'] %>
enabled = <%= @grafana['quota']['enabled'] %>
<% end %>

#### set quotas to -1 to make unlimited. ####
# limit number of users per Org.
<% if @grafana['quota']['org_user'] %>
org_user = <%= @grafana['quota']['org_user'] %>
<% end %>

# limit number of dashboards per Org.
<% if @grafana['quota']['org_dashboard'] %>
org_dashboard = <%= @grafana['quota']['org_dashboard'] %>
<% end %>

# limit number of data_sources per Org.
<% if @grafana['quota']['org_data_source'] %>
org_data_source = <%= @grafana['quota']['org_data_source'] %>
<% end %>

# limit number of api_keys per Org.
<% if @grafana['quota']['org_api_key'] %>
org_api_key = <%= @grafana['quota']['org_api_key'] %>
<% end %>

# limit number of orgs a user can create.
<% if @grafana['quota']['user_org'] %>
user_org = <%= @grafana['quota']['user_org'] %>
<% end %>

# Global limit of users.
<% if @grafana['quota']['global_user'] %>
global_user = <%= @grafana['quota']['global_user'] %>
<% end %>

# global limit of orgs.
<% if @grafana['quota']['global_org'] %>
global_org = <%= @grafana['quota']['global_org'] %>
<% end %>

# global limit of dashboards
<% if @grafana['quota']['global_dashboard'] %>
global_dashboard = <%= @grafana['quota']['global_dashboard'] %>
<% end %>

# global limit of api_keys
<% if @grafana['quota']['global_api_key'] %>
global_api_key = <%= @grafana['quota']['global_api_key'] %>
<% end %>

# global limit on number of logged in users.
<% if @grafana['quota']['global_session'] %>
global_session = <%= @grafana['quota']['global_session'] %>
<% end %>
<% end %>
#################################### Alerting ############################
<% if @grafana['alerting'] %>
[alerting]
# Disable alerting engine & UI features
<% if @grafana['alerting']['enabled'] %>
enabled = <%= @grafana['alerting']['enabled'] %>
<% end %>

# Makes it possible to turn off alert rule execution but alerting UI is visible
<% if @grafana['alerting']['execute_alerts'] %>
execute_alerts = <%= @grafana['alerting']['execute_alerts'] %>
<% end %>

# Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)
<% if @grafana['alerting']['error_or_timeout'] %>
error_or_timeout = <%= @grafana['alerting']['error_or_timeout'] %>
<% end %>

# Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)
<% if @grafana['alerting']['nodata_or_nullvalues'] %>
nodata_or_nullvalues = <%= @grafana['alerting']['nodata_or_nullvalues'] %>
<% end %>

# Alert notifications can include images, but rendering many images at the same time can overload the server
# This limit will protect the server from render overloading and make sure notifications are sent out quickly
<% if @grafana['alerting']['concurrent_render_limit'] %>
concurrent_render_limit = <%= @grafana['alerting']['concurrent_render_limit'] %>
<% end %>

<% if @grafana['alerting']['max_annotation_age'] %>
# Configures for how long alert annotations are stored. Default is 0, which keeps them forever.
max_annotation_age = <%= @grafana['alerting']['max_annotation_age'] %>
<% end %>

<% if @grafana['alerting']['max_annotations_to_keep'] %>
# Configures max number of alert annotations that Grafana stores. Default value is 0, which keeps all alert annotations.
max_annotations_to_keep = <%= @grafana['alerting']['max_annotations_to_keep'] %>
<% end %>
<% end %>

<% if @grafana['unified_alerting'] %>
############################ Unified Alerting ############################
[unified_alerting]
<% if @grafana['unified_alerting']['enabled'] %>
# Enable the Unified Alerting sub-system and interface.
enabled = <%= @grafana['unified_alerting']['enabled'] %>
<% end %>

<% if @grafana['unified_alerting']['disabled_orgs'] %>
disabled_orgs = <%= @grafana['unified_alerting']['disabled_orgs'] %>
<% end %>

<% if @grafana['unified_alerting']['admin_config_poll_interval'] %>
# Specify the frequency of polling for admin config changes. The default value is 60s.
admin_config_poll_interval = <%= @grafana['unified_alerting']['admin_config_poll_interval'] %>
<% end %>

<% if @grafana['unified_alerting']['alertmanager_config_poll_interval'] %>
# Specify the frequency of polling for Alertmanager config changes. The default value is 60s.
alertmanager_config_poll_interval = <%= @grafana['unified_alerting']['alertmanager_config_poll_interval'] %>
<% end %>

<% if @grafana['unified_alerting']['ha_listen_address'] %>
# Listen IP address and port to receive unified alerting messages for other Grafana instances.
# The port is used for both TCP and UDP. It is assumed other Grafana instances are also running on the same port.
# The default value is 0.0.0.0:9094.
ha_listen_address = <%= @grafana['unified_alerting']['ha_listen_address'] %>
<% end %>

<% if @grafana['unified_alerting']['ha_advertise_address'] %>
# Explicit IP address and port to advertise other Grafana instances. The port is used for both TCP and UDP.
ha_advertise_address = <%= @grafana['unified_alerting']['ha_advertise_address'] %>
<% end %>

<% if @grafana['unified_alerting']['ha_peers'] %>
# Comma-separated list of initial instances (in a format of host:port) that will form the HA cluster.
# Configuring this setting will enable High Availability mode for alerting.
ha_peers = <%= @grafana['unified_alerting']['ha_peers'] %>
<% end %>

<% if @grafana['unified_alerting']['ha_peer_timeout'] %>
# Time to wait for an instance to send a notification via the Alertmanager.
ha_peer_timeout = <%= @grafana['unified_alerting']['ha_peer_timeout'] %>
<% end %>

<% if @grafana['unified_alerting']['ha_gossip_interval'] %>
# The interval between sending gossip messages. The default value is 200ms.
ha_gossip_interval = <%= @grafana['unified_alerting']['ha_gossip_interval'] %>
<% end %>

<% if @grafana['unified_alerting']['ha_push_pull_interval'] %>
# The interval between gossip full state syncs. The default value is 60s.
ha_push_pull_interval = <%= @grafana['unified_alerting']['ha_push_pull_interval'] %>
<% end %>

<% if @grafana['unified_alerting']['execute_alerts'] %>
# Enable or disable alerting rule execution. The default value is true.
# This option has a legacy version in the alerting section that takes precedence.
execute_alerts = <%= @grafana['unified_alerting']['execute_alerts'] %>
<% end %>

<% if @grafana['unified_alerting']['evaluation_timeout'] %>
# Sets the alert evaluation timeout when fetching data from the datasource. The default value is 30s
# This option has a legacy version in the [alerting] section that takes precedence.
evaluation_timeout = <%= @grafana['unified_alerting']['evaluation_timeout'] %>
<% end %>

<% if @grafana['unified_alerting']['max_attempts'] %>
# Sets a maximum number of times we’ll attempt to evaluate an alert rule before giving up on that evaluation.
# The default value is 3. This option has a legacy version in the alerting section that takes precedence.
max_attempts = <%= @grafana['unified_alerting']['max_attempts'] %>
<% end %>

<% if @grafana['unified_alerting']['min_interval'] %>
# Sets the minimum interval to enforce between rule evaluations. The default value is 10s which equals the scheduler interval
# This option has a legacy version in the alerting section that takes precedence.
min_interval = <%= @grafana['unified_alerting']['min_interval'] %>
<% end %>
<% end %>

#################################### Rendering ###########################
<% if @grafana['rendering'] %>
[rendering]
<% if @grafana['rendering']['server_url'] %>
server_url = <%= @grafana['rendering']['server_url'] %>
<% end %>
<% if @grafana['rendering']['callback_url'] %>
callback_url = <%= @grafana['rendering']['callback_url'] %>
<% end %>
<% end %>
#################################### Explore #############################
<% if @grafana['explore'] %>
[explore]
# Enable the Explore section
<% if @grafana['explore']['enabled'] %>
enabled = <%= @grafana['explore']['enabled'] %>
<% end %>
<% end %>

#################################### Internal Grafana Metrics ############
<% if @grafana['metrics'] %>
# Metrics available at HTTP API Url /metrics
[metrics]
<% if @grafana['metrics']['enabled'] %>
enabled = <%= @grafana['metrics']['enabled'] %>
<% end %>
<% if @grafana['metrics']['interval_seconds'] %>
interval_seconds = <%= @grafana['metrics']['interval_seconds'] %>
<% end %>

#If both are set, basic auth will be required for the metrics endpoint.
<% if @grafana['metrics']['basic_auth_username'] %>
basic_auth_username = <%= @grafana['metrics']['basic_auth_username'] %>
<% end %>
<% if @grafana['metrics']['basic_auth_password'] %>
basic_auth_password = <%= @grafana['metrics']['basic_auth_password'] %>
<% end %>
<% end %>
# Send internal Grafana metrics to graphite
<% if @grafana['metrics_graphite'] %>
[metrics.graphite]
# Enable by setting the address setting (ex localhost:2003)
<% if @grafana['metrics_graphite']['address'] %>
address = <%= @grafana['metrics_graphite']['address'] %>
<% end %>
<% if @grafana['metrics_graphite']['prefix'] %>
prefix = <%= @grafana['metrics_graphite']['prefix'] %>
<% end %>
<% end %>

[grafana_net]
url = https://grafana.com

[grafana_com]
url = https://grafana.com

<% if @grafana['panels'] %>
[panels]
<% if @grafana['panels']['enable_alpha'] %>
enable_alpha = <%= @grafana['panels']['enable_alpha'] %>
<% end %>
<% end %>

<% if @grafana['enterprise'] %>
[enterprise]
<% if @grafana['enterprise']['license_path'] %>
license_path = <%= @grafana['enterprise']['license_path'] %>
<% end %>
<% end %>

<% if @grafana['feature_toggles'] %>
[feature_toggles]
<% if @grafana['feature_toggles']['alertingPreviewUpgrade'] %>
alertingPreviewUpgrade = <%= @grafana['feature_toggles']['alertingPreviewUpgrade'] %>
<% end %>
<% end %>
